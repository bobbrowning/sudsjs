
/** *****************************************************
 *
 * Web Pages configuration file
 * Webpages.js
 * 
 * One row for each web page generated by the starter 
 * content management system.
 *
 * **************************************************** */


module.exports = {
    friendlyName: 'Web pages',
    description: 'Web pages for the starter content management system',
    permission: { all: ['admin', 'web'], read: ['#guest#'] },
    /** 'normal' columns for a table listing.  The listing of each row will have every column. */
    list: {
        columns: ['pageno', 'title', 'slug', 'pagetype', 'status', 'parent', 'onMenu'],
    },
    /** The columns are split into groups for the row listing and the edit form */
    groups: {
        basic: {
            static: true,
            columns: ['title', 'pagetype', 'slug', 'status', 'author'],
        },
        settings: {
            friendlyName: 'Settings',
            columns: ['onMenu', 'parent', 'tags', 'expires', 'embargo', 'view'],
        },
        content: {
            friendlyName: 'Page Content',
            columns: ['headline', 'pageContent',],
        },
        files: {
            friendlyName: 'Images/Files',
            columns: ['image1', 'image2', 'image3', 'image4', 'image5'],
        },
        subpages: {
            friendlyName: 'Sub pages',
            columns: ['subpages'],
            open: 'subpages',
        },

    },
    /** This function determines how each row is to be described in things like links */
    rowTitle: function (record) {
        return record['title'];
    },

    /** Row 5 is a special row for demonstation purposes. Giest users can see the update form but not submit it.  */
    demoRow: 5,

    /** One entry per column in the table.  
     * friendlyName is the name displayed for that column. If onmitted the field name is 'humanised' (fooBar would become 'Foo Bar')
     * description is used in the tooltip for that field in the update form as well as being documentation.  If omitted the friendlyName is used.
     */
    attributes: {
        pageno: {
            friendlyName: 'Page No',
            type: 'number',
            primaryKey: true,
            autoincrement: true,
        },
        createdAt: {
            friendlyName: 'Date created',
            type: 'number',
            display: { type: 'datetime', truncateForTableList: 16 },   // when displayed on the table list only the first 16 characters are shown.
            database: { type: 'biginteger' },
            process: { createdAt: true }                               // This is created by the system               
        },
        updatedAt: {
            friendlyName: 'Date last updated',
            type: 'number',
            display: { type: 'datetime', truncateForTableList: 16 },
            database: { type: 'biginteger' },
            process: { updatedAt: true }
        },
        updatedBy: {
            friendlyName: 'Last updated by',
            description: `The person who last updated the row.`,
            type: 'number',
            model: 'user',
            process: { updatedBy: true }
        },

        title: {
            type: 'string',
            description: 'This is to identify the page. Note that this is used on the menu.',
        },


        pagetype: {
            type: 'text',
            values: {
                H: 'Plain old HTML',
            },
            input: {
                required: true,
                type: 'select',
            }
        },

        slug: {
            type: 'string',
            input: {
                required: true,
                type: 'text',
                validations: {
                    api: {                                         // validation is by module in bin/suds/api/unique.js
                        route: '/unique',
                    }
                }

            },
        },

        embargo: {
            type: 'string',
            description: 'Embargo Date (ISO Format)',
            input: { type: 'date', width: '220px' },
            display: { type: 'date' },
        },

        expires: {
            type: 'string',
            description: 'Expiry Date (ISO Format)',
            input: { type: 'date', width: '220px' },
            display: { type: 'date' },
        },

        parent: {
            model: 'webpages',
            description: 'The page above this one in the hierarchy',
            friendlyName: 'Parent page',
            input: {
                type: 'autocomplete',
                search: 'title',
                placeholder: 'Start typing page title (case sensitive)',
                idPrefix: 'Parent Page: ',
                width: '80%',
            },
        },

        onMenu: {
            friendlyName: 'Menu order (omitted if off menu)',
            type: 'number',
            display: { tableHeading: 'Menu Order' },
        },

        status: {
            friendlyName: 'Page status',
            type: 'string',
            values: {
                'D': 'Draft',
                'P': 'Published',
                'H': 'On hold',

            },
            input: {
                required: true,
                type: 'radio',
            }
        },

        headline: { type: 'string', },

        tags: { type: 'string' },

        author: {
            model: 'user',                                          // This ius a foreign key of the user table 
            description: 'The Author or maintainer of this page.',
            friendlyName: 'Original author',
            input: {
                width: '80%',
                type: 'autocomplete',
                search: 'fullName',
                placeholder: 'Number or type name (case sensitive)',
                default: '#loggedInUser',
            },
        },

        pageContent: {
            type: 'string',
            description: `This is the main content of the page.  
            If you want to include images, you can go to the images section 
            and upload an image. Shen submit.  Go back to edit / images. 
            The image you upload will have a link. Click with the right 
            mouse button and copy the link. Then use the image function 
            on this page and paste the URL. `,
            input: {
                format: 'col',
                type: 'ckeditor4',
                height: 300,
                placeholder: 'Please enter page content',
            },
            display: { truncateForTableList: 50 },
        },

        view: {
            type: 'string',
            values: function () {
                return require('../config/suds').views;          // The views are stored in the suds.js config file
            },
            input: {
                type: 'select',
            }
        },
        /** upload file. The uploaded file will be given a unique name unless keepFileName is true  */
        image1: {
            type: 'text',
            input: { type: 'uploadFile', keepFileName: true },
        },

        image2: {
            type: 'text',
            input: { type: 'uploadFile', keepFileName: true },
        },

        image3: {
            type: 'text',
            input: { type: 'uploadFile', keepFileName: true },
        },
        image4: {
            type: 'text',
            input: { type: 'uploadFile', keepFileName: true },
        },
        image5: {
            type: 'text',
            input: { type: 'uploadFile', keepFileName: true },
        },
        //  ╔═╗╔═╗╔═╗╔═╗╔═╗╦╔═╗╔╦╗╦╔═╗╔╗╔╔═╗
        //  ╠═╣╚═╗╚═╗║ ║║  ║╠═╣ ║ ║║ ║║║║╚═╗
        //  ╩ ╩╚═╝╚═╝╚═╝╚═╝╩╩ ╩ ╩ ╩╚═╝╝╚╝╚═╝
        subpages: {
            collection: 'webpages',
            via: 'parent',                               // The column in the child record that links to this
            collectionList: {                            // Essentially all of them.
                limit: 999,                                 // number of child records listed in the detail page
                open: true,                                // Open this automatically
                heading: 'Sub pages',               //Heading to the listing 
                columns: ['pageno', 'title', 'slug', 'pagetype', 'status','onMenu'],
                sort: ['onMenu','ASC'],
            },
        },
    },


};

